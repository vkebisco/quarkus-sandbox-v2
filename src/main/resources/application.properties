# datasource configuration
quarkus.datasource.db-kind = postgresql
quarkus.datasource.username = postgres
quarkus.datasource.password = mysecretpassword
#quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/postgres
quarkus.datasource.jdbc.url = jdbc:postgresql://postgres-service:5432/postgres

# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation=update

# opentracing
quarkus.jaeger.service-name=myservice
quarkus.jaeger.sampler-type=const
quarkus.jaeger.sampler-param=1
quarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n

# keycloak

#%prod.quarkus.oidc.auth-server-url=http://localhos:8180/realms/quarkus
#%prod.quarkus.oidc.auth-server-url=http://keycloak:8180/realms/master
%prod.quarkus.oidc.auth-server-url=http://keycloak:8080/realms/master
quarkus.oidc.client-id=backend-service
quarkus.oidc.credentials.secret=secret

# Tell Dev Services for Keycloak to import the realm file
# This property is not effective when running the application in JVM or Native modes

quarkus.keycloak.devservices.realm-path=quarkus-realm.json

# security tests
# keycloak.url is set by OidcWiremockTestResource
#quarkus.oidc.auth-server-url=${keycloak.url}/realms/quarkus/
#quarkus.oidc.client-id=quarkus-service-app
#quarkus.oidc.application-type=service